# Default values for my-k8s-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: ${replicas}

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
containers:
  - name: busybox
    image:
      repository: busybox
      tag: latest
      pullPolicy: IfNotPresent
    command: ["sh", "-c", "while true; do date; sleep 60; done"]
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        cpu: 50m
        memory: 100Mi

  - name: web
    image:
      repository: nginx
      tag: "1.27.2"
      pullPolicy: IfNotPresent
    ports:
      - name: http
        containerPort: 80
        protocol: TCP
    volumeMounts:
      - name: html
        mountPath:  /usr/share/nginx/html/index.html
        subPath:  index.html
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        cpu: 50m
        memory: 100Mi
    livenessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10


# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "alb"
  annotations: {
    alb.ingress.kubernetes.io/scheme: internet-facing,
    alb.ingress.kubernetes.io/target-type: ip,
    alb.ingress.kubernetes.io/healthcheck-path: /,
    alb.ingress.kubernetes.io/certificate-arn: "${cert_arn}",
    alb.ingress.kubernetes.io/group.name: my-k8s-deployment,
    alb.ingress.kubernetes.io/group.order: "100",
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]',
    alb.ingress.kubernetes.io/load-balancer-attributes: "routing.http.drop_invalid_header_fields.enabled=true",
    alb.ingress.kubernetes.io/security-groups: "${security_groups}",
    alb.ingress.kubernetes.io/ssl-redirect: "443",
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS13-1-2-2021-06",
    alb.ingress.kubernetes.io/subnets: "${public_subnets}",
    alb.ingress.kubernetes.io/success-codes: "200",
  }
  hosts:
    - host: "wallester.${domain_name}"
      paths:
        - path: /
          pathType: Prefix
          backend:
              service:
                name: my-k8s-deployment
                port:
                  number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/


# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: ${replicas}
  maxReplicas: 10
  targetCPUUtilizationPercentage: 40
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: html
    configMap:
      name: hello-world-page
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
